import disnake
from disnake.ext import commands
from googleapiclient.discovery import build
import yt_dlp
import asyncio

# üîê –¢–æ–∫–µ–Ω—ã
DISCORD_TOKEN = "TOKEN" # –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ Discord
YOUTUBE_API_KEY = "TOKEN" # –ö–ª—é—á API YouTube Data v3

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –Ω–∞–º–µ—Ä–µ–Ω–∏—è –±–æ—Ç–∞ (—á—Ç–æ –æ–Ω –º–æ–∂–µ—Ç –¥–µ–ª–∞—Ç—å –∏ –∫–∞–∫–∏–µ —Å–æ–±—ã—Ç–∏—è —Å–ª—É—à–∞—Ç—å)
intents = disnake.Intents.default()
intents.message_content = True # –†–∞–∑—Ä–µ—à–∞–µ–º –±–æ—Ç—É —á–∏—Ç–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–ª—è –∫–æ–º–∞–Ω–¥)
intents.voice_states = True # –†–∞–∑—Ä–µ—à–∞–µ–º –±–æ—Ç—É –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ (–∫—Ç–æ –∫—É–¥–∞ –∑–∞—à–µ–ª/–≤—ã—à–µ–ª)

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ —Å –Ω–∞—à–∏–º–∏ –Ω–∞–º–µ—Ä–µ–Ω–∏—è–º–∏
bot = commands.InteractionBot(intents=intents)
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç YouTube API –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–∏–¥–µ–æ
youtube = build("youtube", "v3", developerKey=YOUTUBE_API_KEY)

# –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º—É–∑—ã–∫–∞–ª—å–Ω—ã–º –ø–ª–µ–µ—Ä–æ–º –≤ —Ä–∞–º–∫–∞—Ö –æ–¥–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ (–≥–∏–ª—å–¥–∏–∏)
class MusicPlayer:
    def __init__(self, guild_id):
        self.guild_id = guild_id # ID —Å–µ—Ä–≤–µ—Ä–∞, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è —ç—Ç–æ—Ç –ø–ª–µ–µ—Ä
        self.queue = [] # –û—á–µ—Ä–µ–¥—å —Ç—Ä–µ–∫–æ–≤ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
        self.current = None # –¢–µ–∫—É—â–∏–π –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º—ã–π —Ç—Ä–µ–∫
        self.position = 0 # –ü–æ–∑–∏—Ü–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏ (–¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è, –∫–∞–∫–æ–π —Ç—Ä–µ–∫ —Å–ª–µ–¥—É—é—â–∏–π)
        self.is_playing = False # –§–ª–∞–≥, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∏–π, –∏–≥—Ä–∞–µ—Ç –ª–∏ —á—Ç–æ-—Ç–æ —Å–µ–π—á–∞—Å

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–µ–∫ –≤ –∫–æ–Ω–µ—Ü –æ—á–µ—Ä–µ–¥–∏
    def add_to_queue(self, track):
        self.queue.append(track)

    # –û—á–∏—â–∞–µ–º –≤—Å—é –æ—á–µ—Ä–µ–¥—å –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–ª–µ–µ—Ä–∞
    def clear_queue(self):
        self.queue.clear()
        self.current = None
        self.position = 0
        self.is_playing = False

    # –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
    def get_next_track(self):
        if self.position < len(self.queue):
            track = self.queue[self.position]
            self.current = track
            self.position += 1
            return track
        return None # –ï—Å–ª–∏ –æ—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞ –∏–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ MusicPlayer –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
players = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ MusicPlayer –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
def get_player(guild_id):
    if guild_id not in players:
        players[guild_id] = MusicPlayer(guild_id) # –ï—Å–ª–∏ –ø–ª–µ–µ—Ä–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
    return players[guild_id]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–∏ –Ω–∞ –∞—É–¥–∏–æ–ø–æ—Ç–æ–∫ –∏–∑ –≤–∏–¥–µ–æ (–∏—Å–ø–æ–ª—å–∑—É–µ–º yt-dlp)
def get_audio_stream(url):
    ydl_opts = {
        'format': 'bestaudio', # –í—ã–±–∏—Ä–∞–µ–º –ª—É—á—à–µ–µ –∞—É–¥–∏–æ –∫–∞—á–µ—Å—Ç–≤–æ
        'quiet': True, # –ù–µ –≤—ã–≤–æ–¥–∏–º –ª–∏—à–Ω—é—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å
        'no_warnings': True, # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    }
    try:
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=False) # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–∏–¥–µ–æ –±–µ–∑ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
            if 'entries' in info: # –ï—Å–ª–∏ —ç—Ç–æ –ø–ª–µ–π–ª–∏—Å—Ç, –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —Ç—Ä–µ–∫
                return info['entries'][0]['url']
            return info['url'] # –ï—Å–ª–∏ —ç—Ç–æ –æ–¥–Ω–æ –≤–∏–¥–µ–æ, –±–µ—Ä–µ–º –µ–≥–æ URL
    except Exception as e:
        print(f"‚ùå yt-dlp error: {e}") # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
        return None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–ª–µ–π–ª–∏—Å—Ç–∞ YouTube
def get_playlist_items(url, limit=10):
    ydl_opts = {
        'quiet': True,
        'extract_flat': False, # –í–∞–∂–Ω–æ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–∂–¥–æ–º –≤–∏–¥–µ–æ
        'skip_download': True, # –ù–∞–º –Ω–µ –Ω—É–∂–Ω–æ —Å–∫–∞—á–∏–≤–∞—Ç—å –≤–∏–¥–µ–æ, —Ç–æ–ª—å–∫–æ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    }
    with yt_dlp.YoutubeDL(ydl_opts) as ydl:
        playlist = ydl.extract_info(url, download=False) # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–ª–µ–π–ª–∏—Å—Ç–µ
        if "entries" not in playlist:
            return [] # –ï—Å–ª–∏ –ø–ª–µ–π–ª–∏—Å—Ç –ø—É—Å—Ç –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
        return [
            {
                "title": entry.get("title"),
                "url": f"https://www.youtube.com/watch?v={entry.get('id')}" # –§–æ—Ä–º–∏—Ä—É–µ–º URL –≤–∏–¥–µ–æ
            }
            for entry in playlist["entries"][:limit] # –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–µ–∫–æ–≤
            if entry
        ]

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–∏–¥–µ–æ –Ω–∞ YouTube —Å –ø–æ–º–æ—â—å—é YouTube Data API
async def search_youtube(query: str):
    request = youtube.search().list(
        part="snippet", # –ù–∞–º –Ω—É–∂–µ–Ω —Å–Ω–∏–ø–ø–µ—Ç (–∑–∞–≥–æ–ª–æ–≤–æ–∫, –æ–ø–∏—Å–∞–Ω–∏–µ –∏ —Ç.–¥.)
        maxResults=1, # –ò—â–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ –≤–∏–¥–µ–æ
        q=query, # –ù–∞—à –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        type="video" # –ò—â–µ–º –∏–º–µ–Ω–Ω–æ –≤–∏–¥–µ–æ
    )
    response = request.execute() # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å

    if not response["items"]:
        return None # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ

    item = response["items"][0] # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    video_id = item["id"]["videoId"] # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –≤–∏–¥–µ–æ
    return {
        "title": item["snippet"]["title"], # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤–∏–¥–µ–æ
        "url": f"https://www.youtube.com/watch?v={video_id}" # URL –≤–∏–¥–µ–æ
    }

# –°–æ–±—ã—Ç–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç, –∫–æ–≥–¥–∞ –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ
@bot.event
async def on_ready():
    print(f"‚úÖ –ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!") # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.sync_application_commands() # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥—ã —Å Discord

# –°–ª–µ—à-–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –º—É–∑—ã–∫–∏ –∏–ª–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞
@bot.slash_command(description="üéµ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –º—É–∑—ã–∫—É –∏–ª–∏ –ø–ª–µ–π–ª–∏—Å—Ç —Å YouTube")
async def start(inter: disnake.ApplicationCommandInteraction, query: str):
    await inter.response.defer() # –û—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç, —á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –ø–æ–∫–∞–∑–∞–ª –æ—à–∏–±–∫—É —Ç–∞–π–º–∞—É—Ç–∞

    if not inter.author.voice:
        await inter.followup.send("‚ùó –í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.") # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ
        return

    channel = inter.author.voice.channel # –ü–æ–ª—É—á–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    guild_id = inter.guild.id # –ü–æ–ª—É—á–∞–µ–º ID —Å–µ—Ä–≤–µ—Ä–∞
    music_player = get_player(guild_id) # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–ª–µ–µ—Ä –¥–ª—è —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞

    vc = inter.guild.voice_client or await channel.connect() # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É, –µ—Å–ª–∏ –µ—â–µ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã

    if "list=" in query: # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–∞–ø—Ä–æ—Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –ø–ª–µ–π–ª–∏—Å—Ç
        await inter.channel.send("üìÇ –û–±–Ω–∞—Ä—É–∂–µ–Ω –ø–ª–µ–π–ª–∏—Å—Ç. –ó–∞–≥—Ä—É–∂–∞—é...")
        try:
            tracks = get_playlist_items(query) # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç—Ä–µ–∫–∏ –∏–∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞
            if not tracks:
                await inter.channel.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–ª–µ–π–ª–∏—Å—Ç.")
                return
            for t in tracks:
                music_player.add_to_queue(t) # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–∂–¥—ã–π —Ç—Ä–µ–∫ –≤ –æ—á–µ—Ä–µ–¥—å
            await inter.channel.send(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(tracks)} —Ç—Ä–µ–∫–æ–≤.")
        except Exception as e:
            await inter.channel.send(f"‚ùå –û—à–∏–±–∫–∞: {e}") # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞
            return
    else:
        track = await search_youtube(query) # –ò—â–µ–º –≤–∏–¥–µ–æ –Ω–∞ YouTube –ø–æ –∑–∞–ø—Ä–æ—Å—É
        if not track:
            await inter.channel.send("‚ùå –í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
            return
        music_player.add_to_queue(track) # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Ç—Ä–µ–∫ –≤ –æ—á–µ—Ä–µ–¥—å
        await inter.channel.send(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: `{track["title"]}`")

    if not music_player.is_playing: # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç, –Ω–∞—á–∏–Ω–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
        next_track = music_player.get_next_track() # –ë–µ—Ä–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Ç—Ä–µ–∫ –∏–∑ –æ—á–µ—Ä–µ–¥–∏
        if next_track:
            stream_url = get_audio_stream(next_track["url"]) # –ü–æ–ª—É—á–∞–µ–º –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∞—É–¥–∏–æ–ø–æ—Ç–æ–∫
            if not stream_url:
                await inter.channel.send(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É –¥–ª—è `{next_track["title"]}`")
                music_player.is_playing = False
                return
            # –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∞—É–¥–∏–æ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç—Ä–µ–∫–∞
            vc.play(disnake.FFmpegPCMAudio(stream_url), after=lambda e: asyncio.run_coroutine_threadsafe(play_next(vc, guild_id), bot.loop))
            music_player.is_playing = True # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ –ø–ª–µ–µ—Ä –∏–≥—Ä–∞–µ—Ç
            await inter.channel.send(f"üé∂ –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: `{next_track["title"]}`")

# –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è (–ø—Ä–æ—Å—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É start)
@bot.slash_command(description="üéµ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ /start")
async def play(inter: disnake.ApplicationCommandInteraction, query: str):
    await start(inter, query)

# –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ç—Ä–µ–∫–∞ –≤ –æ—á–µ—Ä–µ–¥–∏
async def play_next(vc, guild_id):
    music_player = get_player(guild_id)
    next_track = music_player.get_next_track()
    if next_track:
        stream_url = get_audio_stream(next_track["url"])
        if not stream_url:
            print(f"‚ùå Failed to extract stream: {next_track["title"]}")
            music_player.is_playing = False
            return
        vc.play(disnake.FFmpegPCMAudio(stream_url), after=lambda e: asyncio.run_coroutine_threadsafe(play_next(vc, guild_id), bot.loop))
    else:
        music_player.is_playing = False # –ï—Å–ª–∏ —Ç—Ä–µ–∫–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–µ–µ—Ä
        await vc.disconnect() # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞

# –°–ª–µ—à-–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ç—Ä–µ–∫–∞
@bot.slash_command(description="‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç—Ä–µ–∫")
async def skip(inter: disnake.ApplicationCommandInteraction):
    await inter.response.defer()
    vc = inter.guild.voice_client
    if not vc or not vc.is_playing():
        await inter.followup.send("üö´ –ù–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç.") # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç, —Å–æ–æ–±—â–∞–µ–º –æ–± —ç—Ç–æ–º
        return
    await inter.followup.send("‚è≠ –ü—Ä–æ–ø—É—Å–∫–∞—é...")
    vc.stop() # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ (—ç—Ç–æ –≤—ã–∑–æ–≤–µ—Ç play_next)

# –°–ª–µ—à-–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–∞—É–∑—ã –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
@bot.slash_command(description="‚è∏ –ü–∞—É–∑–∞")
async def pause(inter: disnake.ApplicationCommandInteraction):
    await inter.response.defer()
    vc = inter.guild.voice_client
    if not vc or not vc.is_playing():
        await inter.followup.send("üö´ –ù–µ—á–µ–≥–æ –ø–∞—É–∑–∏—Ç—å.")
        return
    vc.pause() # –°—Ç–∞–≤–∏–º –Ω–∞ –ø–∞—É–∑—É
    await inter.followup.send("‚è∏ –ü–∞—É–∑–∞.")

# –°–ª–µ—à-–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
@bot.slash_command(description="‚ñ∂Ô∏è –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å")
async def resume(inter: disnake.ApplicationCommandInteraction):
    await inter.response.defer()
    vc = inter.guild.voice_client
    if not vc or not vc.is_paused():
        await inter.followup.send("üö´ –ù–µ –Ω–∞ –ø–∞—É–∑–µ.")
        return
    vc.resume() # –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º
    await inter.followup.send("‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º.")

# –°–ª–µ—à-–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∏ –≤—ã—Ö–æ–¥–∞ –∏–∑ –∫–∞–Ω–∞–ª–∞
@bot.slash_command(description="üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –≤—ã–π—Ç–∏")
async def stop(inter: disnake.ApplicationCommandInteraction):
    await inter.response.defer()
    vc = inter.guild.voice_client
    if not vc:
        await inter.followup.send("‚ùó –ë–æ—Ç –Ω–µ –≤ –∫–∞–Ω–∞–ª–µ.")
        return
    await vc.disconnect() # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    get_player(inter.guild.id).clear_queue() # –û—á–∏—â–∞–µ–º –æ—á–µ—Ä–µ–¥—å –¥–ª—è —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
    await inter.followup.send("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –æ—á–∏—Å—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–∏.")

# –°–ª–µ—à-–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—á–µ—Ä–µ–¥–∏
@bot.slash_command(description="üìú –û—á–µ—Ä–µ–¥—å")
async def queue(inter: disnake.ApplicationCommandInteraction):
    await inter.response.defer()
    music_player = get_player(inter.guild.id)
    if not music_player.queue or music_player.position >= len(music_player.queue):
        await inter.followup.send("üì≠ –û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞.") # –ï—Å–ª–∏ –æ—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞
        return
    lines = []
    if music_player.current:
        lines.append(f"**–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç:** `{music_player.current["title"]}`") # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫
    for i, track in enumerate(music_player.queue[music_player.position:], start=1):
        lines.append(f"{i}. `{track["title"]}`") # –í—ã–≤–æ–¥–∏–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–∫–∏ –≤ –æ—á–µ—Ä–µ–¥–∏
    await inter.followup.send("\n".join(lines)) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—á–µ—Ä–µ–¥—å –≤ –≤–∏–¥–µ —Å–æ–æ–±—â–µ–Ω–∏—è

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É: –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
if __name__ == "__main__":
    bot.run(DISCORD_TOKEN)


